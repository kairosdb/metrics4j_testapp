level: INFO
metrics4j: {
	_dump-file: "dump.conf"

	sources: {
		_collector: Counter
		#_formatter: template
		_trigger: prometheus
		_tags:
			{
				host: "workstation"
			}

		org.kairosdb.metrics4j_testapp.TestStats.countSomethingWithTag: {
			#_formatter: templateWithStatus
		}

		org.kairosdb.metrics4j_testapp: {
			_sink: prometheus
		}
	}

	sinks: {
		slf4j:
		{
			_class: "org.kairosdb.metrics4j.sinks.Slf4JMetricSink"
			log-level: ${level}
		}
		prometheus:
			{
				_class: "org.kairosdb.metrics4jplugin.prometheus.PrometheusSink"
				listen-port: 9090
			}
		#kairos:
		#	{
		#		_class: "org.kairosdb.metrics4jplugin.kairosdb.KairosSink"
		#		host-url: "http://192.168.1.55:8080"
				#telnet-host: "192.168.1.55"
				#telnet-port: 4242
		#	}
		#influx:
		#	{
		#		_class: "org.kairosdb.metrics4jplugin.influxdb.InfluxSink"
		#		host-url: "http://10.92.0.137:8086/write?db=mydb"
		#	}
	}

	collectors: {
		Counter:
		{
			_class: "org.kairosdb.metrics4j.collectors.LongCounter"
		}
		Timer:
		{
			_class: "org.kairosdb.metrics4j.collectors.SimpleTimerMetric"
		}
	}

	formatters: {
		template:
		{
			_class: org.kairosdb.metrics4j.formatters.TemplateFormatter
			template: "metric4j.%{className}.%{methodName}.%{field}"
		}
		templateWithStatus:
		{
			_class: org.kairosdb.metrics4j.formatters.TemplateFormatter
			template: "metric4j.%{className}.%{methodName}.%{tag.status}.%{field}"
		}
	}

	triggers: {
		#myTrigger:
		#{
		#	_class: org.kairosdb.metrics4j.triggers.IntervalTrigger
		#	interval: 5s
		#}
		prometheus:
			{
				_class: "org.kairosdb.metrics4jplugin.prometheus.PrometheusTrigger"
			}
	}
}